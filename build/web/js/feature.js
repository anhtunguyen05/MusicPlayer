/* 
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/JavaScript.js to edit this template
 */


function toggleMenu(optionBtn) {
    // ƒê√≥ng t·∫•t c·∫£ menu tr∆∞·ªõc khi m·ªü menu m·ªõi
    var allMenus = document.getElementsByClassName("playlist-menu");
    for (var i = 0; i < allMenus.length; i++) {
        if (allMenus[i] !== optionBtn.nextElementSibling) {
            allMenus[i].classList.remove("show");
        }
    }

    // L·∫•y menu c·ªßa ph·∫ßn t·ª≠ v·ª´a b·∫•m v√† b·∫≠t/t·∫Øt hi·ªÉn th·ªã
    var menu = optionBtn.nextElementSibling;
    if (menu) {
        menu.classList.toggle("show");
    }
}

// ƒê√≥ng menu khi b·∫•m ra ngo√†i
document.onclick = function (event) {
    var isOption = event.target.classList.contains("option");
    var isMenu = event.target.classList.contains("playlist-menu");

    if (!isOption || !isMenu) {
        var menus = document.getElementsByClassName("playlist-menu");
        for (var i = 0; i < menus.length; i++) {
            menus[i].classList.remove("show");
        }
    }
};

function showPlaylistForm(event, songId) {
    event.stopPropagation(); // NgƒÉn s·ª± ki·ªán lan ra ngo√†i
    document.getElementById("playlistForm").style.display = "block";
    document.querySelectorAll(".add-to-playlist").forEach(button => {
        button.setAttribute("data-song-id", songId);
    });
    
     fetch('GetSongIdServlet?song_id=' + songId) 
        .then(response => response.text())
        .then(html => {
            
        })
        .catch(error => console.error("L·ªói:", error));


}

// ƒê√≥ng form
function closePlaylistForm() {
    document.getElementById("playlistForm").style.display = "none";
}

document.onclick = function (event) {
    var form = document.getElementById("playlistForm");
    if (!form.contains(event.target)) {
        closePlaylistForm();
    }
};

document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".add-to-playlist").forEach(button => {
        button.addEventListener("click", function (event) {
            event.preventDefault(); // NgƒÉn ch·∫∑n chuy·ªÉn trang

            let songId = this.getAttribute("data-song-id");
            let playlistId = this.getAttribute("data-playlist-id");

            fetch("PlaylistServlet", {
                method: "POST",
                headers: {"Content-Type": "application/x-www-form-urlencoded"},
                body: `action=add&songId=${songId}&playlistId=${playlistId}`
            })
                    .then(response => response.text())
                    .then(data => {



                    })
                    .catch(error => console.error("Error:", error));
        });
    });

    document.querySelectorAll(".create-playlist").forEach(button => {
        button.onclick = null; // üî• X√≥a s·ª± ki·ªán c≈© tr∆∞·ªõc khi g√°n m·ªõi
        button.addEventListener("click", function (event) {
            event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh n·∫øu c√≥
            var playlistName = document.querySelector("#create-playlist").value;

            fetch("PlaylistServlet", {
                method: "POST",
                headers: {"Content-Type": "application/x-www-form-urlencoded"},
                body: `action=create&playlistName=${playlistName}`
            })
                    .then(response => response.text())
                    .then(data => {
                        location.reload();
                    })
                    .catch(error => console.error("Error:", error));
        });
    });

});

function removeFromPlaylist(event, songId, playlistId) {
    event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa th·∫ª a ho·∫∑c button
    
    if (!songId) {
        console.error("L·ªói: Thi·∫øu songId");
        return;
    }

    let url, bodyData;

    if (playlistId == "0") {
        // X√≥a b√†i h√°t ng∆∞·ªùi d√πng ƒëƒÉng
        console.log("G·ª≠i request ƒë·∫øn SongServlet...", playlistId);
        url = "SongServlet";
        bodyData = `command=remove&songId=${songId}`;
    } else {
        // X√≥a b√†i h√°t kh·ªèi playlist
        console.log("G·ª≠i request ƒë·∫øn PlaylistServlet...", playlistId);
        url = "PlaylistServlet";
        bodyData = `action=remove&songId=${songId}&playlistId=${playlistId}`;
    }
    console.log("URL:", url, "Body:", bodyData); // Log request ƒë·ªÉ debug
    fetch(url, {
        method: "POST",
        headers: {"Content-Type": "application/x-www-form-urlencoded"},
        body: bodyData
    })
            .then(response => response.text())
            .then(data => {
                console.log(data);
                location.reload(); // T·∫£i l·∫°i trang sau khi x√≥a th√†nh c√¥ng
            })
            .catch(error => console.error("L·ªói:", error));
}

function deletePlaylist(playlistId) {
    if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a playlist n√†y kh√¥ng?")) {
        fetch('PlaylistServlet', {
            method: 'POST',
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            body: `action=delete&playlist_id=${playlistId}`
        })
                .then(response => response.text())
                .then(data => {

                    window.location.href = 'HomepageServlet';

                });
    }
}

function removeFromHistory(event, historyId) {
      
        fetch('HistoryServlet', {
            method: 'POST',
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            body: new URLSearchParams({
                action: 'remove',
                historyId: historyId
            })
        }).then(response => response.text())
                .then(data => {
                    location.reload();
                    console.log(data);
                })
                .catch(error => console.error("L·ªói:", error));
    
}

function openEditForm() {
    document.getElementById("edit-form-container").classList.remove("hidden");
}

function closeEditForm() {
    document.getElementById("edit-form-container").classList.add("hidden");
}

function savePlaylist(playlistId) {
    const newName = document.getElementById("edit-playlist-name").value;
    const newImg = document.getElementById("edit-playlist-img").value;
    
    fetch('PlaylistServlet', {
        method: 'POST',
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        body: `action=update&playlist_id=${playlistId}&new_name=${newName}&playlist_cover=$`
    })
            .then(response => response.text())
            .then(data => {

                //document.getElementById("playlist-name").innerText = newName;
                closeEditForm();
                location.reload();
            });
}

function sendSongId(songId) {
    document.getElementById("songId").value = songId;
    document.getElementById("addSongForm").submit();
}